services:
  postgres:
    image: postgres:16
    container_name: messenger_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: messenger
      POSTGRES_PASSWORD: messenger123
      POSTGRES_DB: messenger_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - messenger-net

  mongodb:
    image: mongo:8.0.5
    container_name: messenger_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - messenger-net
  redis:
    image: redis:7.2
    container_name: messenger_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - messenger-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: messenger_zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - messenger-net

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: messenger_kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - messenger-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: messenger_kafka_ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=messenger_kafka:9092
    networks:
      - messenger-net
  



volumes:
  pgdata:
  mongodata:

networks:
  messenger-net:
    driver: bridge
